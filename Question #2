# Question #2

##############################################################
#Counting the pairs with k different from an integer list
#eg: list = [1, 3,5] and k = 2
#expected: we will have 2 pairs: {(1,3), (3,5)}
#Note: we also consider the negative numbers.
# A simple program to count pairs with difference k
#############################################################

#function to count the number of pairs
def pair_count(lst, n, k):
    count = 0
      
    # Pick all elements one by one
    for i in range(0, n):
  
        # Checking any pair of this picked element
        for j in range(i+1, n) :
             
            if lst[i] - lst[j] == k or lst[j] - lst[i] == k:
                count += 1
                
    return count

#function to find the pairs
def pair_find(lst,n,k):
        numlist = {}
        cnt = 0
        for num in lst:
            if num not in numlist:
                numlist[num] = 1
            else:
                numlist[num] += 1
        pairs = set()
        for num in lst:
            if (num + k) in numlist:
                if k == 0 and numlist[num] > 1:
                    pairs.add((num, num))  
                if k != 0 and numlist[num + k] > 0:
                    pairs.add((num, num+k))
                    
        if pairs == set():
            pairs={}
        return pairs

lst = [int(x) for x in input("Enter numbers list(separated by comma): ").split(",")]
k=int(input("Enter k value:"))
n = len(lst)

print ("We will have",pair_count(lst, n, k),"pair(s):", pair_find(lst, n, k))
